document.addEventListener("DOMContentLoaded", function () {
    const API_URL = "https://script.google.com/macros/s/AKfycbyY9qAq2MNe5N1nUQ2Q8eiUbNFV2EAnrMxzhP51thQFzNNJIRprMYdGkDeTsLmxILxa/exec";

    const loadingElement = document.getElementById("loading");
    const leaderboardBody = document.getElementById("leaderboard-data");
    const updatesList = document.getElementById("updates-list");

    async function fetchData() {
        try {
            const response = await fetch(API_URL);
            const data = await response.json();

            loadingElement.style.display = "none"; // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶Ö‡¶´

            if (!data || !Array.isArray(data)) {
                throw new Error("Invalid data format");
            }

            let leaderboard = {};
            let dailyUpdates = [];

            data.forEach(entry => {
                let name = entry["üë§  ‡¶®‡¶æ‡¶Æ"]?.trim() || "‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ";
                let activeTime = entry["üí¨   ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Æ‡ßã‡¶ü ‡¶ï‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡ßü ‡¶õ‡¶ø‡¶≤‡ßá‡¶®?  (‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ü‡¶ó‡¶§ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®, ‡¶¶‡¶æ‡ßü‡¶ø‡¶§‡ßç‡¶¨‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶ú‡¶ø‡¶Æ‡ßç‡¶Æ‡¶æ‡¶¶‡¶æ‡¶∞‡¶ø ‡¶Ü‡¶û‡ßç‡¶ú‡¶æ‡¶Æ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ)"]?.trim() || "‚ùå ‡¶®‡ßá‡¶á";
                let role = entry["üìö   ‡¶Ü‡¶™‡¶®‡¶ø MR/ CR/ Management ‡¶è‡¶∞ ‡¶¶‡¶æ‡ßü‡¶ø‡¶§‡ßç‡¶¨‡ßá ‡¶∞‡ßü‡ßá‡¶õ‡ßá‡¶®?"]?.trim() || "‚ùå ‡¶®‡ßá‡¶á";
                let courses = entry["üìö   ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶ú‡¶ø‡¶Æ‡ßç‡¶Æ‡¶æ‡¶¶‡¶æ‡¶∞?  "]?.trim() || "‚ùå ‡¶®‡ßá‡¶á";
                let timestamp = entry["Timestamp"]?.trim() || "‚ùå ‡¶®‡ßá‡¶á";

                // Timestamp ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶ï‡¶∞‡¶æ
                let date = new Date(timestamp).toLocaleDateString("en-GB");

                // ‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶∏‡ßá‡¶ü‡¶æ‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá 0 ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶ø
                if (!leaderboard[name]) {
                    leaderboard[name] = { name, activeTime: 0, role };
                }

                // Extract hours from activeTime
                let hours = 0;
                if (activeTime.includes("‡ßß ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 1;
                if (activeTime.includes("‡ß® ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 2;
                if (activeTime.includes("‡ß© ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 3;
                if (activeTime.includes("‡ß™ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 4;
                if (activeTime.includes("‡ß´ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 5;
                if (activeTime.includes("‡ß¨ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 6;
                if (activeTime.includes("‡ß≠ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 7;
                if (activeTime.includes("‡ßÆ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 8;
                if (activeTime.includes("‡ßØ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 9;
                if (activeTime.includes("‡ßß‡ß¶ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) hours = 10;

                // ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶Æ‡ßü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
                leaderboard[name].activeTime += hours;

                // ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü (Timestamp ‡¶∏‡¶π)
                dailyUpdates.push(`üìÖ ${date} | ${name} üïí ${activeTime} üìö ${courses}`);
            });

            // ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶∏‡¶æ‡¶ú‡¶æ‡¶®‡ßã (‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡ßü ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ï‡ßá ‡¶â‡¶™‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã)
            let sortedLeaderboard = Object.values(leaderboard).sort((a, b) => b.activeTime - a.activeTime);

            // ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶° HTML ‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
            leaderboardBody.innerHTML = "";
            sortedLeaderboard.forEach(user => {
                let row = document.createElement("tr");
                row.innerHTML = `
                    <td>${user.name}</td>
                    <td>${user.activeTime} ‡¶ò‡¶®‡ßç‡¶ü‡¶æ</td>
                    <td>${user.role}</td> <!-- ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶≤‡¶æ‡¶Æ -->
                `;
                leaderboardBody.appendChild(row);
            });

            // ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
            updatesList.innerHTML = "";
            dailyUpdates.forEach(update => {
                let li = document.createElement("li");
                li.textContent = update;
                updatesList.appendChild(li);
            });

        } catch (error) {
            loadingElement.textContent = "‚ùå ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá!";
            console.error("Error fetching data:", error);
        }
    }

    fetchData();
});
